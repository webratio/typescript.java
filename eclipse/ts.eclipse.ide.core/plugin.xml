<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<!--
###############################################################################
# Copyright (c) 2015-2016 Angelo Zerr and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Angelo Zerr <angelo.zerr@gmail.com> - Initial API and implementation 
###############################################################################
 -->
<plugin>

   <extension-point id="typeScriptConsoleConnectors" 
   					name="%typeScriptConsoleConnectors.name"
					schema="schema/typeScriptConsoleConnectors.exsd" />
	<extension-point id="nodeJSInstalls" 
					 name="%nodeJSInstallsContribution.name"
					 schema="schema/nodeJSInstalls.exsd" />
 <extension-point id="typeScriptRepositories" name="%typeScriptRepositoriesContribution.name" schema="schema/typeScriptRepositories.exsd"/>

   <extension point="org.eclipse.core.runtime.contentTypes">
	<content-type 
		id="tsSource"
		name="%tsSourceName"
		base-type="org.eclipse.core.runtime.text"
		priority="high"	
		default-charset="UTF-8"	
		file-extensions="ts">
	</content-type>
   </extension>
  		
   <extension point="org.eclipse.core.runtime.contentTypes">
	<content-type 
		id="jsxSource"
		name="%jsxSourceName"
		base-type="org.eclipse.core.runtime.text"
		priority="high"	
		default-charset="UTF-8"
		file-extensions="jsx">
	</content-type>
   </extension>

   <extension point="org.eclipse.core.runtime.contentTypes">
	<content-type 
		id="tsxSource"
		name="%tsxSourceName"
		base-type="org.eclipse.core.runtime.text"
		priority="high"	
		default-charset="UTF-8"
		file-extensions="tsx">
	</content-type>
   </extension>
  	
   <extension
         id="typeScriptProblem"
         name="%TypeScriptProblem.name"
         point="org.eclipse.core.resources.markers">
      <super
            type="org.eclipse.core.resources.problemmarker">
      </super>
      <persistent
            value="true">
      </persistent>
   </extension>
     	
   <extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			id="ts.eclipse.ide.core.TypeScriptNatureTester"
			type="org.eclipse.core.resources.IResource"
			namespace="ts.eclipse.ide.core"
			properties="isTypeScriptProject,hasTypeScriptBuilder,canAddToBuildPath,canRemoveToBuildPath,canRunCompile"
			class="ts.eclipse.ide.internal.core.TypeScriptNatureTester">
		</propertyTester>
	</extension>
			
    <extension point="org.eclipse.core.runtime.adapters">
		<factory 
            class="ts.eclipse.ide.internal.core.resources.ResourceAdapterFactory" 
            adaptableType="org.eclipse.core.resources.IContainer">
            <adapter type="ts.eclipse.ide.core.resources.buildpath.ITypeScriptRootContainer"/>
		</factory>
	</extension>
						
	<!-- Preferences initialization -->
	<extension
		point="org.eclipse.core.runtime.preferences">
		<initializer
			class="ts.eclipse.ide.internal.core.preferences.TypeScriptCorePreferenceInitializer" />
	</extension>
			
	<!-- Builder to compile TypeScript -> JavaScript with tsc -->			
   <extension
         id="typeScriptBuilder"
         name="%TypeScriptBuilder.name"
         point="org.eclipse.core.resources.builders">
      <builder>
         <run class="ts.eclipse.ide.core.builder.TypeScriptBuilder">
         </run>
      </builder>
   </extension>

	<!-- Launch -->
	<extension
       point="org.eclipse.debug.core.launchConfigurationTypes">
	    <launchConfigurationType
	          id="ts.eclipse.ide.core.tscLaunchConfigurationType"
	          delegate="ts.eclipse.ide.internal.core.launch.TypeScriptCompilerLaunchConfigurationDelegate"
	          modes="run"
	          name="%TypeScriptCompilerLaunchConfigurationDelegate.label">
	    </launchConfigurationType>
	</extension>
		
</plugin>        
